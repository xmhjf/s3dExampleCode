VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "EndTORCSym"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'
'   Copyright (c) 2007, Intergraph Corporation. All rights reserved.
'
'   EndTORCSym.cls
'   Author: VRK
'   Creation Date:  Wednesday, Mar 21 2007
'
'   Description:
'   This is an Equipment End TORC Equipment Componenent Assembly
'   This Assembly Uses two Aspects
'   No.Of Aspects       Name of Aspect               No.of Outputs
'      1                Physical                            8
'      2                Insulation                          2
'
'   Change History:
'   dd.mmm.yyyy     who                     change description
'   -----------     ---                     ------------------
'******************************************************************************

Option Explicit

Private Const MODULE = "EndTORCSym:"  'Used for error messages

Private m_oSymbolHelper As IJSymbolHelper

' Declaration of the User Symbol Services interface
Implements IJDUserSymbolServices

Private Sub Class_Initialize()

    Const METHOD = "Class_Initialize:"
    On Error GoTo ErrorHandler

    Set m_oSymbolHelper = New SymbolServices
    m_oSymbolHelper.ProjectName = "SP3DEqpEndTORCCompAsm"
    m_oSymbolHelper.ClassName = "EndTORCSym"

    'Inputs
    m_oSymbolHelper.NumInputs = 5

    m_oSymbolHelper.AddInputDef 1, "VesselDiameter", "Vessel Diameter", 0.5
    m_oSymbolHelper.AddInputDef 2, "EndHeadConeTopDiameter", "End Head Top Diameter", 0.1
    m_oSymbolHelper.AddInputDef 3, "EndHeadConeHeight", "End  Head Height", 0.3
    m_oSymbolHelper.AddInputDef 4, "EndHeadKnuckleRadius", "End Head Knuckle Radius", 0.2
    m_oSymbolHelper.AddInputDef 5, "InsulationThickness", "Insulation Thickness", 0.012

    'Outputs
    m_oSymbolHelper.NumOutputs = 10
    
    m_oSymbolHelper.AddOutputDef 1, "ObjRevolution1", "ObjRevolution1", SimplePhysical
    m_oSymbolHelper.AddOutputDef 2, "EndTORCHead", "EndTORCHead", SimplePhysical
    m_oSymbolHelper.AddOutputDef 3, "Point1", "Point1", SimplePhysical
    m_oSymbolHelper.AddOutputDef 4, "Point2", "Point2", SimplePhysical
    m_oSymbolHelper.AddOutputDef 5, "Circle1", "Circle1", SimplePhysical
    m_oSymbolHelper.AddOutputDef 6, "Plane1", "Plane1", SimplePhysical
    m_oSymbolHelper.AddOutputDef 7, "Circle2", "Circle2", SimplePhysical
    m_oSymbolHelper.AddOutputDef 8, "Plane2", "Plane2", SimplePhysical
    m_oSymbolHelper.AddOutputDef 9, "ObjRevolution1Ins", "ObjRevolution1Ins", Insulation
    m_oSymbolHelper.AddOutputDef 10, "EndTORCHeadIns", "EndTORCHeadIns", Insulation

    'Aspects
    m_oSymbolHelper.NumAspects = 2
    
    m_oSymbolHelper.AddAspectDef 1, "Physical", "Physical", SimplePhysical
    m_oSymbolHelper.AddAspectDef 2, "Insulation", "Insulation", Insulation
   
   Exit Sub

ErrorHandler:
    ReportUnanticipatedError MODULE, METHOD
End Sub

Private Sub Class_Terminate()
    Set m_oSymbolHelper = Nothing
End Sub

'note that the rest of the code is generated by the Symbol Wizard and should not need to be modified
Public Function IJDUserSymbolServices_InstanciateDefinition( _
                ByVal CodeBase As String, _
                ByVal defParameters As Variant, _
                ByVal ActiveConnection As Object) As Object
    'call symbol services default implementation of this method
    Const METHOD = "IJDUserSymbolServices_InstanciateDefinition:"
    On Error GoTo Errx
    
        Set IJDUserSymbolServices_InstanciateDefinition = m_oSymbolHelper.InstanciateDefinition(CodeBase, defParameters, ActiveConnection)
    
    Exit Function
Errx:
    Err.Raise Err.Number, Err.Source & " " & METHOD, Err.Description, _
    Err.HelpFile, Err.HelpContext
End Function

Public Function IJDUserSymbolServices_GetDefinitionName(ByVal definitionParameters As Variant) As String
    Const METHOD = "IJDUserSymbolServices_GetDefinitionName:"
    On Error GoTo Errx
    
      IJDUserSymbolServices_GetDefinitionName = m_oSymbolHelper.ProjectName + "." + m_oSymbolHelper.ClassName
    
    Exit Function
Errx:
    Err.Raise Err.Number, Err.Source & " " & METHOD, Err.Description, _
    Err.HelpFile, Err.HelpContext
End Function

Public Sub IJDUserSymbolServices_InitializeSymbolDefinition(ByRef pSymbolDefinition As IJDSymbolDefinition)
    Const METHOD = "IJDUserSymbolServices_InitializeSymbolDefinition:"
    On Error GoTo Errx
    
    m_oSymbolHelper.InitializeSymbolDefinition pSymbolDefinition
    
Exit Sub
Errx:
    Err.Raise Err.Number, Err.Source & " " & METHOD, Err.Description, _
    Err.HelpFile, Err.HelpContext
      
End Sub

Public Sub IJDUserSymbolServices_InvokeRepresentation(ByVal sblOcc As Object, _
                    ByVal repName As String, _
                    ByVal outputcoll As Object, _
                    ByRef arrayOfInputs())
    Const METHOD = "IJDUserSymbolServices_InvokeRepresentation:"
    On Error GoTo Errx
    
    m_oSymbolHelper.InvokeRepresentation sblOcc, repName, outputcoll, arrayOfInputs
        
Exit Sub
Errx:
    Err.Raise Err.Number, Err.Source & " " & METHOD, Err.Description, _
    Err.HelpFile, Err.HelpContext
End Sub

Public Function IJDUserSymbolServices_EditOccurence(ByRef pSymbolOccurence As Object, ByVal transactionMgr As Object) As Boolean
    Const METHOD = "IJDUserSymbolServices_EditOccurence:"
    On Error GoTo Errx
    
    'The definition uses the generic EditOccurrence command
    IJDUserSymbolServices_EditOccurence = False
    
Exit Function
Errx:
    Err.Raise Err.Number, Err.Source & " " & METHOD, Err.Description, _
    Err.HelpFile, Err.HelpContext
End Function







