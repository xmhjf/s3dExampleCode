<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="101" xml:space="preserve">
    <value>Depth should be greater than twice the flange thickness and twice the kdesign.</value>
  </data>
  <data name="102" xml:space="preserve">
    <value>Depth should be greater than twice the thickness design, and thickness design must be greater than zero.</value>
  </data>
  <data name="103" xml:space="preserve">
    <value>Depth should be greater than flange thickness and kdesign.</value>
  </data>
  <data name="104" xml:space="preserve">
    <value>Depth and width should be greater than twice the thickness design, and thickness design must be greater than zero.</value>
  </data>
  <data name="105" xml:space="preserve">
    <value>Input properties should satisfy the following conditions: 1. Depth should be greater than top flange thickness; 2. Top flange width should be greater than web thickness; 3. Web thickness must be greater than zero; 4. Top flange thickness must be greater than zero.</value>
  </data>
  <data name="106" xml:space="preserve">
    <value>Input properties should satisfy the following conditions: 1. Depth should be greater than the sum of the top flange and bottom flange thickness; 2. Top flange width and bottom flange width should be greater than the web thickness; 3. Web thickness must be greater than zero; 4. Top flange and bottom flange thickness must be greater than zero.</value>
  </data>
  <data name="107" xml:space="preserve">
    <value>Input properties should satisfy the following conditions: 1. Tube diameter should be greater than twice the tube thickness; 2. Tube thickness must be greater than zero.</value>
  </data>
  <data name="108" xml:space="preserve">
    <value>Input properties should satisfy the following conditions: 1. Diameter start and diameter end should be greater than twice the cone thickness; 2. Diameter start should not be equal to diameter end; 3. Cone thickness must be greater than zero.</value>
  </data>
  <data name="109" xml:space="preserve">
    <value>Input properties should satisfy the following conditions: 1. Tube diameter should be greater than cone diameter and should be greater than twice the tube thickness; 2. Tube thickness should be greater than zero.</value>
  </data>
  <data name="110" xml:space="preserve">
    <value>Input properties should satisfy the following conditions: 1. Web thickness should be greater than zero and should always be less than the flange width; 2. Flange thickness should always be less than half of the depth; 3. Top flange thickness must be greater than zero.</value>
  </data>
  <data name="111" xml:space="preserve">
    <value>Input properties should satisfy the following conditions: 1. Tube diameter should be greater than twice the tube thickness; 2. Diameter start should be greater than twice the cone thickness; 3. Diameter end should be greater than twice the cone thickness;  4. Tube diameter should be greater than the diameter start; 5. Tube diameter should be greater than the diameter end; 6. Tube thickness, cone1Thickness, and cone2Thickness must be greater than zero.</value>
  </data>
  <data name="112" xml:space="preserve">
    <value>The kdesign value should be greater than or equal to the flange thickness and should be less than half of the depth.</value>
  </data>
  <data name="113" xml:space="preserve">
    <value>One or more input values cannot be a negative.</value>
  </data>
  <data name="114" xml:space="preserve">
    <value>Web thickness should always be less than the flange width.</value>
  </data>
  <data name="115" xml:space="preserve">
    <value>Web thickness cannot be less than or equal to zero. Also, web thickness should be less than the width.</value>
  </data>
  <data name="116" xml:space="preserve">
    <value>Both depth and web thickness must be greater than zero.</value>
  </data>
  <data name="117" xml:space="preserve">
    <value>Depth should always be greater than zero.</value>
  </data>
  <data name="118" xml:space="preserve">
    <value>Depth and width must be greater than zero.</value>
  </data>
  <data name="119" xml:space="preserve">
    <value>Section property calculations are not available for '</value>
  </data>
  <data name="120" xml:space="preserve">
    <value>' cross-section part class. Please update calculator project to handle property calculations for '</value>
  </data>
  <data name="121" xml:space="preserve">
    <value>' cross-section part class or specify a different calculator ProgID in &lt;SYMBOL_SHARE&gt;\Xml\Structure\CrossSectionTypeProperties.xml.</value>
  </data>
  <data name="122" xml:space="preserve">
    <value>For more information on how to add a new cross-section type in the calculator project, please refer to the Structure Reference Data help.</value>
  </data>
</root>