VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "HoleTraceOnSpool"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
'******************************************************************************
'Copyright © 2006, Intergraph Corporation
'
'Project:   COMReport
'
'File:      HoleTraceOnSpool.cls
'
'Description: This object creates an ADO recordset which is passed to the
'  Reports application for inclusion in a Report.  It is necessary to use
'  a COM object to calculate non-persisted data, the diameter of the hole
'  trace, in conjunction with an SQL script to obtain persisted data.
'
'  A recordset is obtained through the execution of the SQL statement in
'  the *.rqe file.  The recordset generated by the SQL statement is used to
'  generate a new recordset that is passed back to the Reports engine to
'  create the final report.  It is done this way because the default query
'  interpreter fails to handle the SQL statement for the Holes on Spool
'  report.
'
'History:
'Triveni CH      DI-CP-178852  All the data under M:\SharedContent should be under M:\SharedContent\Data.
'******************************************************************************
Option Explicit

Private Const Module = "ISQueryInterpreter.HoleTraceOnSpool:"

Implements IJQueryInterpreter

Private m_bEvaluateOnly             As Boolean
Private m_oADORecordsetBase         As ADODB.Recordset
Private m_oADORecordsetResult       As ADODB.Recordset
Private m_oCacheController          As IJCacheController
Private m_oFilterResult             As Object
Private m_oParameters               As IJQueriesParameters
Private m_oQParams                  As IJQueryParameters
Private m_oQuery                    As IJQuery

'******************************************************************************
'Class Constructor/Destructor
'******************************************************************************
Private Sub Class_Initialize()
End Sub

Private Sub Class_Terminate()
    Set m_oCacheController = Nothing
    Set m_oADORecordsetBase = Nothing
    Set m_oADORecordsetResult = Nothing
End Sub

'******************************************************************************
'Private implementation of IJQueryInterpreter
'******************************************************************************
Public Property Set IJQueryInterpreter_CacheController _
    (RHS As SP3DReportsRuntimeInterfaces.IJCacheController)
    Set m_oCacheController = RHS
End Property

Public Property Get IJQueryInterpreter_CacheController() _
    As SP3DReportsRuntimeInterfaces.IJCacheController
End Property

Public Property Let IJQueryInterpreter_EvaluateOnly(ByVal RHS As Boolean)
    m_bEvaluateOnly = RHS
End Property

Public Property Get IJQueryInterpreter_EvaluateOnly() As Boolean
    IJQueryInterpreter_EvaluateOnly = m_bEvaluateOnly
End Property

Public Sub IJQueryInterpreter_Execute(Command As String, Argument As String)
    Const Method = "IJQueryInterpreter_Execute"
    
    On Error GoTo ErrorHandler
    Dim strError As String
    
    ' Create the Recordset that is to be returned.  It will be open so
    ' that records may be added.
    If Not m_oADORecordsetResult Is Nothing Then
        Set m_oADORecordsetResult = Nothing
    End If
    CreateResultRecordset
    
    ' In the design mode only the empty recordset will be returned.  The
    ' available fields are what is required in that case rather than
    ' actual data.
    If m_bEvaluateOnly = True Then
        Exit Sub
    End If
    
    ' Get the base recordset the will populate the report.  This will
    ' include all of the required persisted fields and the non-persisted
    ' diameter will be added to it.  This will populate a member
    ' ADODB.Recordset.
    GetBaseRecordset
    
    ' Populate the result recordset.
    PopulateResultRecordset
    
    Exit Sub

ErrorHandler:
    MsgBox Module & Method & vbCr & strError

End Sub

Public Property Set IJQueryInterpreter_FilterResult(ByVal RHS As Object)
    Set m_oFilterResult = RHS
End Property

Public Property Get IJQueryInterpreter_FilterResult() As Variant
    Set IJQueryInterpreter_FilterResult = m_oFilterResult
End Property

Public Property Set IJQueryInterpreter_Parameters _
    (RHS As SP3DReportsObjectsInterfaces.IJQueryParameters)
    Set m_oQParams = RHS
End Property

Public Property Get IJQueryInterpreter_Parameters() _
    As SP3DReportsObjectsInterfaces.IJQueryParameters
    Set IJQueryInterpreter_Parameters = m_oQParams
End Property

Public Property Get IJQueryInterpreter_ParticipatingObjects() _
    As SP3DReportsRuntimeInterfaces.IJElements
End Property

Public Property Set IJQueryInterpreter_Query _
    (RHS As SP3DReportsObjectsInterfaces.IJQuery)
    Set m_oQuery = RHS
End Property

Public Property Get IJQueryInterpreter_Query() _
    As SP3DReportsObjectsInterfaces.IJQuery
    Set IJQueryInterpreter_Query = m_oQuery
End Property

Public Property Set IJQueryInterpreter_QueryFilter _
    (RHS As SP3DReportsObjectsInterfaces.IJQueryFilter)
End Property

Public Property Get IJQueryInterpreter_QueryFilter() _
    As SP3DReportsObjectsInterfaces.IJQueryFilter
End Property

Public Property Get IJQueryInterpreter_QueryResult() As Variant
    Set IJQueryInterpreter_QueryResult = m_oADORecordsetResult
End Property

'******************************************************************************
'Private methods
'******************************************************************************
Private Sub GetBaseRecordset()
    Const Method = "GetBaseRecordset"
   
    Dim strError As String
    On Error GoTo ErrorHandler
   
    Dim sSQL As String
    sSQL = GetSelectStatementFromRqe()

    ' Setup a Command object to query the database.
    Dim oDBCommand As ADODB.Command
    Dim oDBJCommand As JMiddleCommand
    
    If TypeOf m_oCacheController.DBConnection Is ADODB.Connection Then
        strError = "Working with IJADOCommand"
        Set oDBCommand = New ADODB.Command
        Set oDBCommand.ActiveConnection = m_oCacheController.DBConnection
        oDBCommand.ActiveConnection.CursorLocation = adUseClient
        
        strError = "Execute the SQL query"
        oDBCommand.CommandType = adCmdText
        oDBCommand.CommandText = sSQL
        oDBCommand.CommandTimeout = 0       'DM135953
        oDBCommand.Prepared = True
        Set m_oADORecordsetBase = oDBCommand.Execute
    Else
        strError = "Working with JMiddleCommand"
        Set oDBJCommand = New JMiddleCommand
        oDBJCommand.QueryLanguage = LANGUAGE_SQL
        Set oDBJCommand.ActiveConnection = m_oCacheController.DBConnection
        
        strError = "Execute the SQL query"
        oDBJCommand.CommandType = adCmdText
        oDBJCommand.CommandText = sSQL
        oDBJCommand.CommandTimeout = 0      'DM135953
        Set m_oADORecordsetBase = oDBJCommand.Execute
    End If
    
    Exit Sub
    
ErrorHandler:
    MsgBox Module & Method & vbCr & strError & vbCr & Err.Description

End Sub

Private Sub CreateResultRecordset()
    Const Method = "CreateResultRecordset"
    
    On Error GoTo ErrorHandler
    
    ' Create the recordset that will ultimately be sent to the Reporting
    ' mechanism.
    Set m_oADORecordsetResult = New ADODB.Recordset
    
    ' Specify the fields in the recordset.
    With m_oADORecordsetResult.Fields
        .Append "oid", adVarWChar, 256, adFldIsNullable
        .Append "SpoolName", adVarWChar, 256, adFldIsNullable
        .Append "SpoolOid", adVarWChar, 256, adFldIsNullable
        .Append "HoleName", adVarWChar, 256, adFldIsNullable
        .Append "StructureName", adVarWChar, 256, adFldIsNullable
        .Append "PlateName", adVarWChar, 256, adFldIsNullable
        .Append "CS", adVarWChar, 256, adFldIsNullable
        .Append "X", adVarWChar, 32, adFldIsNullable
        .Append "Y", adVarWChar, 32, adFldIsNullable
        .Append "Z", adVarWChar, 32, adFldIsNullable
        .Append "Diameter", adDouble, , adFldIsNullable
    End With
    
    ' Open the recordset to enable addition of records.
    m_oADORecordsetResult.Open , , , adLockOptimistic
    
    GoTo Cleanup
    
ErrorHandler:
    MsgBox Module & Method & vbCr & Err.Description

Cleanup:
    
End Sub

Private Sub PopulateResultRecordset()
    Const Method = "PopulateResultRecordset"
    
    On Error GoTo ErrorHandler

    ' For each record in the base recordset, create a recor in the result
    ' recordset.  The information will be mostly the same but the diameter
    ' of the HoleTraceAE will be calculated and added to the result.
    m_oADORecordsetBase.MoveFirst
    
    Do While Not m_oADORecordsetBase.EOF
        
        ' Get data from the input recordset ...
        With m_oADORecordsetBase
        
            Dim holeOid As String
            holeOid = .Fields("HoleTrace oid").Value
            Dim spoolName As String
            spoolName = .Fields("Spool Name").Value
            Dim spoolOid As String
            spoolOid = .Fields("Spool oid").Value
            Dim holeName As String
            holeName = .Fields("Hole Name").Value
            Dim structureName As String
            structureName = .Fields("Plate Name (penetrated)").Value
            Dim plateName As String
            plateName = .Fields("Plate Name (fitting)").Value
            Dim coordinateSystem As String
            coordinateSystem = .Fields("CS").Value
            Dim x As String
            x = .Fields("X").Value
            Dim y As String
            y = .Fields("Y").Value
            Dim z As String
            z = .Fields("Z").Value
            Dim diameter As Double
            diameter = .Fields("Diameter").Value
            
        End With
        
        ' ... and add it to the output recordset.
        With m_oADORecordsetResult
        
            ' Populate the recordset with the required data.
            .AddNew
            .Fields.Item("oid").Value = holeOid
            .Fields.Item("SpoolName").Value = spoolName
            .Fields.Item("SpoolOid").Value = spoolOid
            .Fields.Item("HoleName").Value = holeName
            .Fields.Item("StructureName").Value = structureName
            .Fields.Item("PlateName").Value = plateName
            .Fields.Item("CS").Value = coordinateSystem
            .Fields.Item("X").Value = x
            .Fields.Item("Y").Value = y
            .Fields.Item("Z").Value = z
            .Fields.Item("Diameter").Value = diameter
            
        End With

        m_oADORecordsetBase.MoveNext
    Loop
    
    GoTo Cleanup
    
ErrorHandler:
    MsgBox Module & Method & vbCr & Err.Description

Cleanup:
'    Set xxx = Nothing

End Sub

Private Function GetSelectStatementFromRqe() As String
    Const Method = "GetSelectStatementFromRqe"
    
    Dim strError As String
    On Error GoTo ErrorHandler
   
    ' Get the SQL statement that has been specified in the .rqe file.
    If Not m_oQuery Is Nothing Then
        Dim oQuery As IJSQLCommand
        Set oQuery = m_oQuery.SQL

        Dim strQuery As String
        strQuery = oQuery.Statement
    Else
        strQuery = ""
        strError = "SQL Query not obtained from the .rqe file"
        GoTo ErrorHandler
    End If

    ' Return the select statement.
    GetSelectStatementFromRqe = strQuery
    
    GoTo Cleanup
    
ErrorHandler:
    MsgBox Module & "" & Method & vbCr & strError & vbCr & Err.Description

Cleanup:
    Set oQuery = Nothing
   
End Function
